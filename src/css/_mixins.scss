@mixin row ($justify: flex-start, $align: flex-start) {
  display: flex;
  flex-direction: row;
  width: 100%;
  justify-content: $justify;
  align-items: $align;
}

@mixin column($justify: flex-start, $align: flex-start) {
  display: flex;
  position: relative;
  flex-direction: column;
  justify-content: $justify;
  align-items: $align;
}

@mixin centered {
//  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin clickable {
  cursor: pointer;
  pointer-events: all;
  &:hover {
    transform: scale(.95);
    &.active {
      transform: none;
    }
  }
  &:active {
    transform: scale(.90);
    opacity: .6;
  }
}

@mixin iconRound {
  background-color: $markerBlue;
  border-radius: 99em;
  box-sizing: border-box;
  border: 2px solid $darkblue;
  
}
@mixin mapIcon {
  width: $mapIconWidth;
  height: $mapIconHeight;
  position: absolute;
  left: -$mapIconWidth / 2;
  top: -$mapIconHeight / 2;
  margin-top: 5px;
}
@mixin mapIconBig {
  width: $mapIconWidthBig;
  height: $mapIconHeightBig;
  position: absolute;
  left: -$mapIconWidthBig / 2;
  top: -$mapIconHeightBig / 2;
  margin-top: 5px;
}
@mixin mapIconRound {
  @include mapIcon;
  @include iconRound;
  overflow: visible;
}


@mixin a-link {
  text-decoration: underline;
  color: #3f79b5;
  cursor: pointer;
  text-decoration: none;
}

@mixin backgrounded {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin phone-only {
  @media (max-width: 599px) { @content; }
}
@mixin phone-landscape {
  @media (orientation: landscape) and (max-width: 900px) { @content; }
}
@mixin tablet-portrait {
  @media (min-width: 600px) { @content; }
}
@mixin tablet-landscape {
  @media (min-width: 900px) { @content; }
}
@mixin desktop {
  @media (min-width: 1200px) { @content; }
}
@mixin big-desktop {
  @media (min-width: 1800px) { @content; }
}

/// Mixin to place items on a circle
/// @author Kitty Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size, $rot, $dir) {
  position: absolute;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none;  
  
  
  > * {
//    display: block;
//    background: blue;
    position: absolute;
    top:  50%; 
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -($item-size / 2);
  
    $angle: (360 / $item-count) * $dir;
    //$rot: 20;

    @for $i from 1 through 99 {
      &:nth-of-type(#{$i}) {
        transform: 
          rotate($rot * -1deg) 
          translate($circle-size / 2 - $item-size * .5 ) 
//          rotate($rot * 1deg + ($i - 1) * 3 * - $dir)
          rotate($rot * 1deg)
//          scale(1 - $i / 10)
          ;
//        opacity: 1 / ($i * .9);
        z-index: -1 * $i;
//        border-radius: ($i - 1) * 5px;
      }

      $rot: $rot + $angle;
    }
  }
}